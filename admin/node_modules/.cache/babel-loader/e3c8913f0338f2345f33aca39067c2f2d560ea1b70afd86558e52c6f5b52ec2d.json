{"ast":null,"code":"import _regeneratorRuntime from\"/home/hp/Documents/Netflix-Clone/Leoflix/admin/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/hp/Documents/Netflix-Clone/Leoflix/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";import{updateMovieStart,updateMovieSuccess,updateMovieFailure,createListStart,createListSuccess,createListFailure,getListsFailure,deleteListStart,deleteListSuccess,deleteListFailure,getListsStart,getListsSuccess}from\"./ListActions\";export var getLists=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch(getListsStart());_context.prev=1;_context.next=4;return axios.get(\"https://leoflix.onrender.com/api/lists\",{headers:{token:\"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken}});case 4:res=_context.sent;dispatch(getListsSuccess(res.data));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(getListsFailure());case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));return function getLists(_x){return _ref.apply(this,arguments);};}();export var createList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(list,dispatch){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:dispatch(createListStart());_context2.prev=1;_context2.next=4;return axios.post(\"/lists\",list,{headers:{token:\"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken}});case 4:res=_context2.sent;dispatch(createListSuccess(res.data));_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch(createListFailure());case 11:case\"end\":return _context2.stop();}},_callee2,null,[[1,8]]);}));return function createList(_x2,_x3){return _ref2.apply(this,arguments);};}();// export const updateMovies=async(movie, id,dispatch)=>{\n//     dispatch(updateMovieStart());\n//     try{\n//         const res=await axios.put(\"/movies/\"+id,movie,{headers: {\n//             token: \"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken\n//         },});\n//         dispatch(updateMovieSuccess(res.data));\n//     }catch(err){\n//         dispatch(updateMovieFailure());\n//     }\n// }\nexport var deleteList=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id,dispatch){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:dispatch(deleteListStart());_context3.prev=1;_context3.next=4;return axios.delete(\"https://leoflix.onrender.com/api/lists/\"+id,{headers:{token:\"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken}});case 4:dispatch(deleteListSuccess(id));_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](1);dispatch(deleteListFailure());case 10:case\"end\":return _context3.stop();}},_callee3,null,[[1,7]]);}));return function deleteList(_x4,_x5){return _ref3.apply(this,arguments);};}();","map":{"version":3,"names":["axios","updateMovieStart","updateMovieSuccess","updateMovieFailure","createListStart","createListSuccess","createListFailure","getListsFailure","deleteListStart","deleteListSuccess","deleteListFailure","getListsStart","getListsSuccess","getLists","dispatch","get","headers","token","JSON","parse","localStorage","getItem","accessToken","res","data","createList","list","post","deleteList","id","delete"],"sources":["/home/hp/Documents/Netflix-Clone/Leoflix/admin/src/context/listContext/apiCalls.jsx"],"sourcesContent":["import axios from \"axios\";\nimport {\n  updateMovieStart,\n  updateMovieSuccess,\n  updateMovieFailure,\n  createListStart,\n  createListSuccess,\n  createListFailure,\n  getListsFailure,\n  deleteListStart,\n  deleteListSuccess,\n  deleteListFailure,\n  getListsStart,\n  getListsSuccess,\n} from \"./ListActions\";\n\nexport const getLists = async (dispatch) => {\n  dispatch(getListsStart());\n  try {\n    const res = await axios.get(\"https://leoflix.onrender.com/api/lists\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    dispatch(getListsSuccess(res.data));\n  } catch (err) {\n    dispatch(getListsFailure());\n  }\n};\n\nexport const createList=async(list,dispatch)=>{\n    dispatch(createListStart());\n    try{\n        const res=await axios.post(\"/lists\",list,{headers: {\n            token: \"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken\n        },});\n        dispatch(createListSuccess(res.data));\n    }catch(err){\n        dispatch(createListFailure());\n    }\n}\n\n// export const updateMovies=async(movie, id,dispatch)=>{\n//     dispatch(updateMovieStart());\n//     try{\n//         const res=await axios.put(\"/movies/\"+id,movie,{headers: {\n//             token: \"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken\n//         },});\n//         dispatch(updateMovieSuccess(res.data));\n//     }catch(err){\n//         dispatch(updateMovieFailure());\n//     }\n// }\n\nexport const deleteList=async(id,dispatch)=>{\n    dispatch(deleteListStart());\n    try{\n        await axios.delete(\"https://leoflix.onrender.com/api/lists/\"+id,{headers: {\n            token: \"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).accessToken\n        },});\n        dispatch(deleteListSuccess(id));\n    }catch(err){\n        dispatch(deleteListFailure());\n    }\n}\n"],"mappings":"wRAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OACEC,gBAAgB,CAChBC,kBAAkB,CAClBC,kBAAkB,CAClBC,eAAe,CACfC,iBAAiB,CACjBC,iBAAiB,CACjBC,eAAe,CACfC,eAAe,CACfC,iBAAiB,CACjBC,iBAAiB,CACjBC,aAAa,CACbC,eAAe,KACV,eAAe,CAEtB,MAAO,IAAMC,SAAQ,4FAAG,iBAAOC,QAAQ,2HACrCA,QAAQ,CAACH,aAAa,EAAE,CAAC,CAAC,sCAENX,MAAK,CAACe,GAAG,CAAC,wCAAwC,CAAE,CACpEC,OAAO,CAAE,CACPC,KAAK,CAAE,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,WAC9D,CACF,CAAC,CAAC,QAJIC,GAAG,eAKTT,QAAQ,CAACF,eAAe,CAACW,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,+EAEpCV,QAAQ,CAACP,eAAe,EAAE,CAAC,CAAC,mEAE/B,kBAZYM,SAAQ,4CAYpB,CAED,MAAO,IAAMY,WAAU,6FAAC,kBAAMC,IAAI,CAACZ,QAAQ,+HACvCA,QAAQ,CAACV,eAAe,EAAE,CAAC,CAAC,wCAERJ,MAAK,CAAC2B,IAAI,CAAC,QAAQ,CAACD,IAAI,CAAC,CAACV,OAAO,CAAE,CAC/CC,KAAK,CAAE,SAAS,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,WAC9D,CAAE,CAAC,CAAC,QAFEC,GAAG,gBAGTT,QAAQ,CAACT,iBAAiB,CAACkB,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,mFAEtCV,QAAQ,CAACR,iBAAiB,EAAE,CAAC,CAAC,qEAErC,kBAVYmB,WAAU,kDAUtB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMG,WAAU,6FAAC,kBAAMC,EAAE,CAACf,QAAQ,uHACrCA,QAAQ,CAACN,eAAe,EAAE,CAAC,CAAC,wCAElBR,MAAK,CAAC8B,MAAM,CAAC,yCAAyC,CAACD,EAAE,CAAC,CAACb,OAAO,CAAE,CACtEC,KAAK,CAAE,SAAS,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,WAC9D,CAAE,CAAC,CAAC,QACJR,QAAQ,CAACL,iBAAiB,CAACoB,EAAE,CAAC,CAAC,CAAC,mFAEhCf,QAAQ,CAACJ,iBAAiB,EAAE,CAAC,CAAC,qEAErC,kBAVYkB,WAAU,kDAUtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}